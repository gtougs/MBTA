"""Initial database schema

Revision ID: fdf8d1c42329
Revises: 
Create Date: 2025-08-10 13:55:27.968057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fdf8d1c42329'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('alert_id', sa.String(length=50), nullable=False),
    sa.Column('alert_header_text', sa.Text(), nullable=True),
    sa.Column('alert_description_text', sa.Text(), nullable=True),
    sa.Column('alert_url', sa.String(length=500), nullable=True),
    sa.Column('alert_effect', sa.String(length=100), nullable=True),
    sa.Column('alert_severity_level', sa.String(length=50), nullable=True),
    sa.Column('affected_route_ids', sa.JSON(), nullable=True),
    sa.Column('affected_stop_ids', sa.JSON(), nullable=True),
    sa.Column('affected_trip_ids', sa.JSON(), nullable=True),
    sa.Column('active_period_start', sa.DateTime(), nullable=True),
    sa.Column('active_period_end', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alert_id')
    )
    op.create_index('idx_alerts_effect', 'alerts', ['alert_effect'], unique=False)
    op.create_index('idx_alerts_severity', 'alerts', ['alert_severity_level'], unique=False)
    op.create_index('idx_alerts_timestamp', 'alerts', ['timestamp'], unique=False)
    op.create_table('data_ingestion_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_inserted', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ingestion_logs_source', 'data_ingestion_logs', ['source_type'], unique=False)
    op.create_index('idx_ingestion_logs_status', 'data_ingestion_logs', ['status'], unique=False)
    op.create_index('idx_ingestion_logs_timestamp', 'data_ingestion_logs', ['started_at'], unique=False)
    op.create_table('routes',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('route_name', sa.String(length=100), nullable=False),
    sa.Column('route_type', sa.Integer(), nullable=False),
    sa.Column('route_color', sa.String(length=7), nullable=True),
    sa.Column('route_text_color', sa.String(length=7), nullable=True),
    sa.Column('route_sort_order', sa.Integer(), nullable=True),
    sa.Column('route_long_name', sa.String(length=200), nullable=True),
    sa.Column('route_desc', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_routes_name', 'routes', ['route_name'], unique=False)
    op.create_index('idx_routes_type', 'routes', ['route_type'], unique=False)
    op.create_table('stops',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('stop_name', sa.String(length=200), nullable=False),
    sa.Column('stop_lat', sa.Float(), nullable=True),
    sa.Column('stop_lon', sa.Float(), nullable=True),
    sa.Column('stop_code', sa.String(length=50), nullable=True),
    sa.Column('stop_desc', sa.Text(), nullable=True),
    sa.Column('zone_id', sa.String(length=50), nullable=True),
    sa.Column('stop_url', sa.String(length=500), nullable=True),
    sa.Column('location_type', sa.Integer(), nullable=True),
    sa.Column('parent_station', sa.String(length=50), nullable=True),
    sa.Column('wheelchair_boarding', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_station'], ['stops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_stops_location', 'stops', ['stop_lat', 'stop_lon'], unique=False)
    op.create_index('idx_stops_name', 'stops', ['stop_name'], unique=False)
    op.create_index('idx_stops_parent', 'stops', ['parent_station'], unique=False)
    op.create_table('vehicles',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('vehicle_id', sa.String(length=50), nullable=False),
    sa.Column('vehicle_label', sa.String(length=100), nullable=True),
    sa.Column('vehicle_license_plate', sa.String(length=20), nullable=True),
    sa.Column('vehicle_type', sa.Integer(), nullable=True),
    sa.Column('vehicle_capacity', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vehicle_id')
    )
    op.create_index('idx_vehicles_label', 'vehicles', ['vehicle_label'], unique=False)
    op.create_index('idx_vehicles_type', 'vehicles', ['vehicle_type'], unique=False)
    op.create_table('trips',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('route_id', sa.String(length=50), nullable=False),
    sa.Column('service_id', sa.String(length=50), nullable=False),
    sa.Column('trip_headsign', sa.String(length=100), nullable=True),
    sa.Column('trip_short_name', sa.String(length=50), nullable=True),
    sa.Column('direction_id', sa.Integer(), nullable=True),
    sa.Column('block_id', sa.String(length=50), nullable=True),
    sa.Column('shape_id', sa.String(length=50), nullable=True),
    sa.Column('wheelchair_accessible', sa.Integer(), nullable=True),
    sa.Column('bikes_allowed', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_trips_direction', 'trips', ['direction_id'], unique=False)
    op.create_index('idx_trips_route', 'trips', ['route_id'], unique=False)
    op.create_index('idx_trips_service', 'trips', ['service_id'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.String(length=50), nullable=False),
    sa.Column('route_id', sa.String(length=50), nullable=False),
    sa.Column('stop_id', sa.String(length=50), nullable=False),
    sa.Column('vehicle_id', sa.String(length=50), nullable=True),
    sa.Column('arrival_time', sa.DateTime(), nullable=True),
    sa.Column('departure_time', sa.DateTime(), nullable=True),
    sa.Column('schedule_relationship', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('delay', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.vehicle_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('trip_id', 'stop_id', 'arrival_time', name='uq_prediction_trip_stop_time')
    )
    op.create_index('idx_predictions_arrival', 'predictions', ['arrival_time'], unique=False)
    op.create_index('idx_predictions_stop', 'predictions', ['stop_id'], unique=False)
    op.create_index('idx_predictions_timestamp', 'predictions', ['timestamp'], unique=False)
    op.create_index('idx_predictions_trip', 'predictions', ['trip_id'], unique=False)
    op.create_table('trip_updates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('trip_id', sa.String(length=50), nullable=False),
    sa.Column('route_id', sa.String(length=50), nullable=True),
    sa.Column('delay', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_trip_updates_delay', 'trip_updates', ['delay'], unique=False)
    op.create_index('idx_trip_updates_timestamp', 'trip_updates', ['timestamp'], unique=False)
    op.create_index('idx_trip_updates_trip', 'trip_updates', ['trip_id'], unique=False)
    op.create_table('vehicle_positions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('vehicle_id', sa.String(length=50), nullable=False),
    sa.Column('trip_id', sa.String(length=50), nullable=True),
    sa.Column('route_id', sa.String(length=50), nullable=True),
    sa.Column('direction_id', sa.Integer(), nullable=True),
    sa.Column('stop_id', sa.String(length=50), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('bearing', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('congestion_level', sa.Integer(), nullable=True),
    sa.Column('occupancy_status', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['route_id'], ['routes.id'], ),
    sa.ForeignKeyConstraint(['stop_id'], ['stops.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.vehicle_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_vehicle_positions_location', 'vehicle_positions', ['latitude', 'longitude'], unique=False)
    op.create_index('idx_vehicle_positions_timestamp', 'vehicle_positions', ['timestamp'], unique=False)
    op.create_index('idx_vehicle_positions_trip', 'vehicle_positions', ['trip_id'], unique=False)
    op.create_index('idx_vehicle_positions_vehicle', 'vehicle_positions', ['vehicle_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_vehicle_positions_vehicle', table_name='vehicle_positions')
    op.drop_index('idx_vehicle_positions_trip', table_name='vehicle_positions')
    op.drop_index('idx_vehicle_positions_timestamp', table_name='vehicle_positions')
    op.drop_index('idx_vehicle_positions_location', table_name='vehicle_positions')
    op.drop_table('vehicle_positions')
    op.drop_index('idx_trip_updates_trip', table_name='trip_updates')
    op.drop_index('idx_trip_updates_timestamp', table_name='trip_updates')
    op.drop_index('idx_trip_updates_delay', table_name='trip_updates')
    op.drop_table('trip_updates')
    op.drop_index('idx_predictions_trip', table_name='predictions')
    op.drop_index('idx_predictions_timestamp', table_name='predictions')
    op.drop_index('idx_predictions_stop', table_name='predictions')
    op.drop_index('idx_predictions_arrival', table_name='predictions')
    op.drop_table('predictions')
    op.drop_index('idx_trips_service', table_name='trips')
    op.drop_index('idx_trips_route', table_name='trips')
    op.drop_index('idx_trips_direction', table_name='trips')
    op.drop_table('trips')
    op.drop_index('idx_vehicles_type', table_name='vehicles')
    op.drop_index('idx_vehicles_label', table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_index('idx_stops_parent', table_name='stops')
    op.drop_index('idx_stops_name', table_name='stops')
    op.drop_index('idx_stops_location', table_name='stops')
    op.drop_table('stops')
    op.drop_index('idx_routes_type', table_name='routes')
    op.drop_index('idx_routes_name', table_name='routes')
    op.drop_table('routes')
    op.drop_index('idx_ingestion_logs_timestamp', table_name='data_ingestion_logs')
    op.drop_index('idx_ingestion_logs_status', table_name='data_ingestion_logs')
    op.drop_index('idx_ingestion_logs_source', table_name='data_ingestion_logs')
    op.drop_table('data_ingestion_logs')
    op.drop_index('idx_alerts_timestamp', table_name='alerts')
    op.drop_index('idx_alerts_severity', table_name='alerts')
    op.drop_index('idx_alerts_effect', table_name='alerts')
    op.drop_table('alerts')
    # ### end Alembic commands ###
